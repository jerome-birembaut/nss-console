{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/core/index.js","src/index.js"],"names":[],"mappings":";;;;;;;AAAA;ACAA;;;;;;IACqB,U;;;;;aAGZ,M,mBAAQ,K,EAAO,M,EAAQ;AAC5B,WAAO;AACL,cAAQ,GADH;AAEL,aAAO,8BAA8B,KAAK,KAAL,CAAW,SAAS,CAApB,CAA9B,GAAuD,KAAvD,GAA+D,KAAK,KAAL,CAAW,QAAQ,CAAnB,CAA/D,GAAuF,mBAAvF,GAA6G,MAA7G,GAAsH;AAFxH,KAAP;AAID,G;;aACM,O,oBAAS,Q,EAAiD;AAAA,QAAxC,KAAwC,uEAAhC,SAAgC;AAAA,QAArB,WAAqB,uEAAP,KAAO;;AAC/D,QAAI,YAAY,SAAhB;AACA,QAAI,UAAU,SAAd,EAAyB;AACvB,cAAQ,WAAW,MAAX,CAAkB,WAAW,kBAA7B,CAAR;AACA,iBAAW,kBAAX;AACA,UAAI,WAAW,kBAAX,IAAiC,WAAW,MAAX,CAAkB,MAAvD,EAA+D;AAC7D,mBAAW,kBAAX,GAAgC,CAAhC;AACD;AACF;AACD,QAAI,WAAJ,EAAiB;AACf,UAAI,OAAO,KAAX;AACA,cAAQ,SAAR;AACA,kBAAY,IAAZ;AACD;AACD,QAAI,UAAU,SAAV,CAAoB,WAApB,GAAkC,OAAlC,CAA0C,QAA1C,IAAsD,CAAC,CAA3D,EAA8D;AAC5D,UAAI,OAAO,CACT,WAAW,QAAX,GAAqB,QADZ,EAET,yDAAyD,KAFhD,EAGT,0BAA0B,KAA1B,GAAkC,gBAAlC,GAAqD,SAArD,GAAiE,GAHxD,EAIT,yDAAyD,KAJhD,EAKT,iBAAiB,SAAjB,GAA6B,GALpB,CAAX;AAOA,cAAQ,GAAR,CAAY,KAAZ,CAAkB,OAAlB,EAA2B,IAA3B;AACD,KATD,MASO;AACL,cAAQ,GAAR,CAAY,QAAZ;AACD;AACF,G;;aACM,K,kBAAO,G,EAAK,K,EAAO;AACxB,YAAQ,SAAS,CAAjB;AACA,WAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACpC,UAAI,UAAU,SAAV,CAAoB,WAApB,GAAkC,OAAlC,CAA0C,QAA1C,IAAsD,CAAC,CAA3D,EAA8D;AAC5D,YAAI,MAAM,IAAI,KAAJ,EAAV;AACA,YAAI,MAAJ,GAAa,YAAY;AACvB,cAAI,MAAM,WAAW,MAAX,CAAkB,KAAK,KAAL,GAAa,KAA/B,EAAsC,KAAK,MAAL,GAAc,CAAd,GAAkB,KAAxD,CAAV;AACA,kBAAQ,GAAR,CAAY,OAAO,IAAI,MAAvB,EAA+B,IAAI,KAAJ,GAAY,kBAAZ,GAAiC,GAAjC,GAAuC,gCAAvC,GAA2E,KAAK,KAAL,GAAa,KAAxF,GAAiG,KAAjG,GAA0G,KAAK,MAAL,GAAc,KAAxH,GAAiI,yBAAhK;AACA;AACD,SAJD;AAKA,YAAI,GAAJ,GAAU,GAAV;AACD,OARD,MAQO;AACL,gBAAQ,GAAR,CAAY,gCAAgC,GAA5C;AACA;AACD;AACF,KAbI,CAAP;AAcD,G;;aACM,G,kBAAM;AACX,YAAQ,GAAR,CAAY,MAAM,SAAN,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,SAA3B,CAAZ;AACD,G;;;;;AAvDkB,U,CACZ,M,GAAS,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD,C;AADG,U,CAEZ,kB,GAAqB,C;kBAFT,U;;;;;;;;;;;;;yCCDZ,O;;;;;;AAET,OAAO,UAAP,GAAoB,OAApB,C,CAA6B","file":"nss-console.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","\"use strict\"\r\nexport default class NSSConsole {\r\n  static colors = ['#b5cdf1', '#f8674f', '#a7cd79', '#c9a0dc', '#ffef00', '#fb9912']\r\n  static colorsCurrentIndex = 0\r\n  static getBox (width, height) {\r\n    return {\r\n      string: '+',\r\n      style: 'font-size: 1px; padding: ' + Math.floor(height / 2) + 'px ' + Math.floor(width / 2) + 'px; line-height: ' + height + 'px;'\r\n    }\r\n  }\r\n  static message (message, color = undefined, invertColor = false) {\r\n    let colorBase = '#030307'\r\n    if (color === undefined) {\r\n      color = NSSConsole.colors[NSSConsole.colorsCurrentIndex]\r\n      NSSConsole.colorsCurrentIndex++\r\n      if (NSSConsole.colorsCurrentIndex >= NSSConsole.colors.length) {\r\n        NSSConsole.colorsCurrentIndex = 0\r\n      }\r\n    }\r\n    if (invertColor) {\r\n      let temp = color\r\n      color = colorBase\r\n      colorBase = temp\r\n    }\r\n    if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\r\n      let args = [\r\n        '%c %c ' + message + ' %c %c',\r\n        'padding: 1px;border-radius: 3px 0 0 3px;background: ' + color,\r\n        'padding: 1px; color: ' + color + '; background: ' + colorBase + ';',\r\n        'padding: 1px;border-radius: 0 3px 3px 0;background: ' + color,\r\n        'background: ' + colorBase + ';'\r\n      ]\r\n      console.log.apply(console, args)\r\n    } else {\r\n      console.log(message)\r\n    }\r\n  }\r\n  static image (url, scale) {\r\n    scale = scale || 1\r\n    return new Promise((resolve, reject) => {\r\n        if (navigator.userAgent.toLowerCase().indexOf('chrome') > -1) {\r\n          var img = new Image()\r\n          img.onload = function () {\r\n            var dim = NSSConsole.getBox(this.width * scale, this.height / 2 * scale)\r\n            console.log('%c' + dim.string, dim.style + 'background: url(' + url + ') no-repeat; background-size: ' + (this.width * scale) + 'px ' + (this.height * scale) + 'px; color: transparent;')\r\n            resolve()\r\n          }\r\n          img.src = url\r\n        } else {\r\n          console.log('failed to show this image: ' + url)\r\n          resolve()\r\n        }\r\n      })\r\n  }\r\n  static log (){\r\n    console.log(Array.prototype.slice.call(arguments))\r\n  }\r\n\r\n}","export { default as NSSConsole } from './core';\r\n\r\nglobal.NSSConsole = exports; // eslint-disable-line"],"sourceRoot":"."}